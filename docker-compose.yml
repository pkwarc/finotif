services:
  postgres:
    image: postgres:${POSTGRES_TAG}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
  rabbitmq:
    image: rabbitmq:${BROKER_TAG}
    expose:
      - "${BROKER_PORT}"
  app:
    build:
      context: .
      args:
        - POETRY_VERSION=${POETRY_VERSION}
    expose:
      - "${APP_PORT}"
    volumes:
      - static_data:/var/www/app/staticfiles
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - TARGET_ENV=${TARGET_ENV}
      - APP_PORT=${APP_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - BROKER_HOST=${BROKER_HOST}
      - BROKER_PORT=${BROKER_PORT}
    depends_on:
      - postgres
  nginx:
    build: ./nginx
    volumes:
      - static_data:/staticfiles
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - APP_PORT=${APP_PORT}
    depends_on:
      - app

volumes:
  db_data:
    driver: local
  static_data:
    driver: local